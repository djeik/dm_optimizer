The preferred way to run a quick (ish) test of the optimizer is to make any changes to the configuration in dm_tests_config.py, commit those changes to git and then run run_reproducible_pipeline.py on the interesting steps. The steps are listed in .pipeline. Please read the documentation of Reproducible to see how run_reproducible_pipeline.py can be invoked.

All scripts beginning with "submit" are meant to be run on Abacus. They will in turn invoke the Qmsub utility to schedule a job on the cluster. 

WARNING: If the code of dm_tests.py (or other modules that get imported therefrom) is changed while tests are running BAD THINGS WILL HAPPEN. VERY BAD THINGS. This doesn't always happen though. It depends on what you change, when you save your changes, and whether those changes include syntax errors ;). The problem is that dm_tests uses multiprocessing, which causes the script to be reloaded from disk when a new instance of the python interpreter is spawned to run the subprocess. Because of this, the usual faculty of linux whereby an executable can be replaced during execution is not available to us. It is advisable, therefore, that if you want to make some changes while a test is running, then you should simply copy all the code to another folder / clone the repo.
